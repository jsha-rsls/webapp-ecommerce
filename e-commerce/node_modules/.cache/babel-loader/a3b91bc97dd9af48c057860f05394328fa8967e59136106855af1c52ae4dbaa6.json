{"ast":null,"code":"import axios from \"axios\";\nexport const readRFID = async setRfidReadStatus => {\n  try {\n    const response = await axios.get(\"http://192.168.100.220/read-rfid\");\n    const {\n      status,\n      bookPassID,\n      password,\n      message\n    } = response.data;\n    if (status === \"success\") {\n      setRfidReadStatus(`BookPassID: ${bookPassID}, Password: ${password}`);\n    } else {\n      setRfidReadStatus(message || \"No RFID data found\");\n    }\n  } catch (error) {\n    console.error(\"Error reading RFID data:\", error);\n    setRfidReadStatus(\"Error reading RFID data\");\n  }\n};","map":{"version":3,"names":["axios","readRFID","setRfidReadStatus","response","get","status","bookPassID","password","message","data","error","console"],"sources":["D:/childhoodweb/e-commerce/src/admin/rfidFunction/rfidRead.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const readRFID = async (setRfidReadStatus) => {\r\n  try {\r\n    const response = await axios.get(\"http://192.168.100.220/read-rfid\");\r\n    const { status, bookPassID, password, message } = response.data;\r\n\r\n    if (status === \"success\") {\r\n      setRfidReadStatus(`BookPassID: ${bookPassID}, Password: ${password}`);\r\n    } else {\r\n      setRfidReadStatus(message || \"No RFID data found\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error reading RFID data:\", error);\r\n    setRfidReadStatus(\"Error reading RFID data\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,MAAOC,iBAAiB,IAAK;EACnD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,kCAAkC,CAAC;IACpE,MAAM;MAAEC,MAAM;MAAEC,UAAU;MAAEC,QAAQ;MAAEC;IAAQ,CAAC,GAAGL,QAAQ,CAACM,IAAI;IAE/D,IAAIJ,MAAM,KAAK,SAAS,EAAE;MACxBH,iBAAiB,CAAC,eAAeI,UAAU,eAAeC,QAAQ,EAAE,CAAC;IACvE,CAAC,MAAM;MACLL,iBAAiB,CAACM,OAAO,IAAI,oBAAoB,CAAC;IACpD;EACF,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChDR,iBAAiB,CAAC,yBAAyB,CAAC;EAC9C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}