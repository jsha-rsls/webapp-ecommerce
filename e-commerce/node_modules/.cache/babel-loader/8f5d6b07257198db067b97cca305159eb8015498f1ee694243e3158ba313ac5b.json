{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John Cedric Lorenzo\\\\Documents\\\\WEB APP CHILDHOOD\\\\webapp-ecommerce\\\\e-commerce\\\\src\\\\pages\\\\forgotPass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../styles/forgotPass.module.css\";\nimport \"../styles/global.css\";\nimport { FaChevronLeft } from \"react-icons/fa6\";\nimport { IoArrowForwardCircle } from \"react-icons/io5\";\nimport { AiOutlineExclamationCircle } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPass = () => {\n  _s();\n  const [step, setStep] = useState(1);\n\n  // Form states\n  const [email, setEmail] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  // Error states\n  const [errors, setErrors] = useState({\n    email: \"\",\n    code: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    successMessage: \"\"\n  });\n\n  // Track if the code input should be enabled\n  const [isCodeEnabled, setIsCodeEnabled] = useState(false);\n  const [isCodeVerified, setIsCodeVerified] = useState(null); // null = not checked, true = verified, false = invalid\n\n  const [emailSuccessMessage, setEmailSuccessMessage] = useState(\"\");\n  const [codeSuccessMessage, setCodeSuccessMessage] = useState(\"\");\n\n  // Send code to the email entered\n  const sendCode = async () => {\n    let emailError = \"\";\n\n    // Validate email format\n    if (!email.match(/^\\S+@\\S+\\.\\S+$/)) {\n      emailError = \"This email is invalid. Make sure it's written like example@email.com\";\n    }\n    setErrors({\n      ...errors,\n      email: emailError\n    });\n\n    // Proceed only if email is valid\n    if (!emailError) {\n      try {\n        // Send POST request to the server\n        const response = await fetch(\"http://localhost:8000/send-code.php\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email\n          }),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const rawText = await response.text();\n        console.log(\"Raw response:\", rawText); // For debugging purposes\n\n        let data;\n        try {\n          data = JSON.parse(rawText);\n        } catch (e) {\n          console.error(\"Invalid JSON received:\", rawText);\n          setErrors({\n            ...errors,\n            email: \"Unexpected response from the server. Please try again.\"\n          });\n          return;\n        }\n\n        // Handle server response\n        if (data.success) {\n          setIsCodeEnabled(true); // Enable the code input field after successful code send\n          setEmailSuccessMessage(data.success); // Success for email step\n          setErrors({\n            ...errors,\n            email: \"\"\n          }); // Clear email error\n          setStep(1); // Stay on step 1 until the code is verified\n        } else if (data.error) {\n          setErrors({\n            ...errors,\n            email: data.error // Show error message if the email is not registered\n          });\n        }\n      } catch (error) {\n        console.error(\"Error sending code:\", error);\n        setErrors({\n          ...errors,\n          email: \"There was an error connecting to the server. Please try again later.\"\n        });\n      }\n    }\n  };\n  const handleCodeChange = async e => {\n    const enteredCode = e.target.value;\n    setCode(enteredCode);\n\n    // Validate code format (if needed)\n    if (!enteredCode.match(/^\\d{6}$/)) {\n      setIsCodeVerified(false);\n      setErrors({\n        ...errors,\n        code: \"Please enter a valid 6-digit code.\"\n      });\n      return;\n    }\n\n    // Check if the code is valid (dynamically, after every change)\n    try {\n      const response = await fetch(\"http://localhost:8000/verify-code.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          code: enteredCode\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const rawText = await response.text();\n      let data;\n      try {\n        data = JSON.parse(rawText);\n      } catch (e) {\n        console.error(\"Invalid JSON received:\", rawText);\n        setErrors({\n          ...errors,\n          code: \"Unexpected response from the server. Please try again.\"\n        });\n        setIsCodeVerified(false);\n        return;\n      }\n      if (data.success) {\n        setCodeSuccessMessage(data.success); // Success for code verification step\n        setErrors({\n          ...errors,\n          code: \"\"\n        }); // Clear code error\n        setIsCodeVerified(true); // Set verified if the server returns success\n      } else if (data.error) {\n        setErrors({\n          ...errors,\n          code: data.error\n        });\n        setIsCodeVerified(false); // Set false if verification fails\n      }\n    } catch (error) {\n      console.error(\"Error verifying code:\", error);\n      setErrors({\n        ...errors,\n        code: \"There was an error verifying the code. Please try again later.\"\n      });\n      setIsCodeVerified(false);\n    }\n  };\n\n  // Verify code entered by user\n  const verifyCode = async () => {\n    let codeError = \"\";\n    if (!code.match(/^\\d{6}$/)) {\n      codeError = \"Please enter your 6-digit code.\";\n      setIsCodeVerified(false); // Set to false if code format is invalid\n    }\n    setErrors({\n      ...errors,\n      code: codeError\n    });\n    if (!codeError) {\n      try {\n        const response = await fetch(\"http://localhost:8000/verify-code.php\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            email,\n            code\n          }),\n          // Include both email and code\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const rawText = await response.text();\n        let data;\n        try {\n          data = JSON.parse(rawText);\n        } catch (e) {\n          console.error(\"Invalid JSON received:\", rawText);\n          setErrors({\n            ...errors,\n            code: \"Unexpected response from the server. Please try again.\"\n          });\n          setIsCodeVerified(false);\n          return;\n        }\n        if (data.success) {\n          setErrors({\n            ...errors,\n            successMessage: data.success\n          });\n          setStep(2); // Proceed to the password reset step\n          setIsCodeVerified(true); // Set to true if verification is successful\n        } else if (data.error) {\n          setErrors({\n            ...errors,\n            code: data.error\n          });\n          setIsCodeVerified(false); // Set to false if verification fails\n        }\n      } catch (error) {\n        console.error(\"Error verifying code:\", error);\n        setErrors({\n          ...errors,\n          code: \"There was an error verifying the code. Please try again later.\"\n        });\n        setIsCodeVerified(false);\n      }\n    }\n  };\n  const previousStep = () => setStep(1);\n  const handleUpdatePassword = async () => {\n    let passwordError = \"\";\n    let confirmPasswordError = \"\";\n    if (!password) {\n      passwordError = \"Please enter your password.\";\n    }\n    if (!confirmPassword || confirmPassword !== password) {\n      confirmPasswordError = \"Password and Confirm Password do not match.\";\n    }\n    setErrors({\n      password: passwordError,\n      confirmPassword: confirmPasswordError\n    });\n    if (!passwordError && !confirmPasswordError) {\n      const response = await fetch(\"http://localhost:8000/change-password.php\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          // Pass the email to the backend\n          code,\n          newPassword: password,\n          confirmPassword\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      if (data.error) {\n        setErrors({\n          ...errors,\n          ...data\n        });\n      } else {\n        console.log(\"Password updated successfully!\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.fpassContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logo,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require(\"../assets/main-logo.png\"),\n        alt: \"Childhood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.progressBar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: step >= 1 ? styles.activeProgress : styles.inactiveProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: step === 2 ? styles.activeProgress : styles.inactiveProgress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stepContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.stepHeader,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {\n            className: styles.back\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stepDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepTitle,\n            children: \"Step 1 of 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepDescription,\n            children: \"Confirm Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.inputContainer} ${errors.email ? styles.errorInputContainer : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"name@domain.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: `${styles.input} ${errors.email ? styles.errorInput : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: sendCode,\n            className: styles.inputIconButton,\n            children: /*#__PURE__*/_jsxDEV(IoArrowForwardCircle, {\n              className: styles.inputIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.errorIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), \" \", errors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }, this), emailSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.successMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.successIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), \" \", emailSuccessMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.inputContainer} ${isCodeVerified === false ? styles.errorInputContainer : \"\" // Red border if not verified\n          } ${isCodeVerified === true ? styles.successInputContainer : \"\"}` // Green border if verified\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"XXXXXX\",\n            value: code,\n            onChange: handleCodeChange // Trigger verification on each change\n            ,\n            className: `${styles.input} ${isCodeVerified === false ? styles.errorInput : \"\"} ${isCodeVerified === true ? styles.successInput : \"\"}`,\n            disabled: !isCodeEnabled // Disable until the code is sent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), errors.code && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.errorIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this), \" \", errors.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this), codeSuccessMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.successMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.successIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this), \" \", codeSuccessMessage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyCode,\n        className: styles.nextBtn,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.stepContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.stepHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: previousStep,\n          children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {\n            className: styles.back\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.stepDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepTitle,\n            children: \"Step 2 of 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.stepDescription,\n            children: \"Changing Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.inputContainer} ${errors.password || errors.confirmPassword ? styles.errorInputContainer : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            className: `${styles.input} ${errors.password || errors.confirmPassword ? styles.errorInput : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.errorIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this), \" \", errors.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.inputContainer} ${errors.confirmPassword || errors.password ? styles.errorInputContainer : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Re-type password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value),\n            className: `${styles.input} ${errors.confirmPassword || errors.password ? styles.errorInput : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.errorIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this), \" \", errors.confirmPassword]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdatePassword,\n        className: styles.upPassBtn,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPass, \"6we0xQ48kIEMWGiEwnQU3FdJwPg=\");\n_c = ForgotPass;\nexport default ForgotPass;\nvar _c;\n$RefreshReg$(_c, \"ForgotPass\");","map":{"version":3,"names":["React","useState","Link","styles","FaChevronLeft","IoArrowForwardCircle","AiOutlineExclamationCircle","jsxDEV","_jsxDEV","ForgotPass","_s","step","setStep","email","setEmail","code","setCode","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","successMessage","isCodeEnabled","setIsCodeEnabled","isCodeVerified","setIsCodeVerified","emailSuccessMessage","setEmailSuccessMessage","codeSuccessMessage","setCodeSuccessMessage","sendCode","emailError","match","response","fetch","method","body","JSON","stringify","headers","rawText","text","console","log","data","parse","e","error","success","handleCodeChange","enteredCode","target","value","verifyCode","codeError","previousStep","handleUpdatePassword","passwordError","confirmPasswordError","newPassword","json","className","fpassContainer","children","logo","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","progressBar","activeProgress","inactiveProgress","stepContent","stepHeader","to","back","stepDetails","stepTitle","stepDescription","inputContainer","errorInputContainer","type","placeholder","onChange","input","errorInput","onClick","inputIconButton","inputIcon","errorMessage","errorIcon","successIcon","successInputContainer","successInput","disabled","nextBtn","upPassBtn","_c","$RefreshReg$"],"sources":["C:/Users/John Cedric Lorenzo/Documents/WEB APP CHILDHOOD/webapp-ecommerce/e-commerce/src/pages/forgotPass.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../styles/forgotPass.module.css\";\r\nimport \"../styles/global.css\";\r\nimport { FaChevronLeft } from \"react-icons/fa6\";\r\nimport { IoArrowForwardCircle } from \"react-icons/io5\";\r\nimport { AiOutlineExclamationCircle } from \"react-icons/ai\";\r\n\r\nconst ForgotPass = () => {\r\n  const [step, setStep] = useState(1);\r\n\r\n  // Form states\r\n  const [email, setEmail] = useState(\"\");\r\n  const [code, setCode] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  // Error states\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    code: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    successMessage: \"\",\r\n  });\r\n\r\n  // Track if the code input should be enabled\r\n  const [isCodeEnabled, setIsCodeEnabled] = useState(false);\r\n  const [isCodeVerified, setIsCodeVerified] = useState(null); // null = not checked, true = verified, false = invalid\r\n\r\n  const [emailSuccessMessage, setEmailSuccessMessage] = useState(\"\");\r\n  const [codeSuccessMessage, setCodeSuccessMessage] = useState(\"\");\r\n\r\n  // Send code to the email entered\r\n  const sendCode = async () => {\r\n    let emailError = \"\";\r\n\r\n    // Validate email format\r\n    if (!email.match(/^\\S+@\\S+\\.\\S+$/)) {\r\n      emailError =\r\n        \"This email is invalid. Make sure it's written like example@email.com\";\r\n    }\r\n\r\n    setErrors({ ...errors, email: emailError });\r\n\r\n    // Proceed only if email is valid\r\n    if (!emailError) {\r\n      try {\r\n        // Send POST request to the server\r\n        const response = await fetch(\"http://localhost:8000/send-code.php\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ email }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n\r\n        const rawText = await response.text();\r\n        console.log(\"Raw response:\", rawText); // For debugging purposes\r\n\r\n        let data;\r\n\r\n        try {\r\n          data = JSON.parse(rawText);\r\n        } catch (e) {\r\n          console.error(\"Invalid JSON received:\", rawText);\r\n          setErrors({\r\n            ...errors,\r\n            email: \"Unexpected response from the server. Please try again.\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        // Handle server response\r\n        if (data.success) {\r\n          setIsCodeEnabled(true); // Enable the code input field after successful code send\r\n          setEmailSuccessMessage(data.success); // Success for email step\r\n          setErrors({ ...errors, email: \"\" }); // Clear email error\r\n          setStep(1); // Stay on step 1 until the code is verified\r\n        } else if (data.error) {\r\n          setErrors({\r\n            ...errors,\r\n            email: data.error, // Show error message if the email is not registered\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error sending code:\", error);\r\n        setErrors({\r\n          ...errors,\r\n          email:\r\n            \"There was an error connecting to the server. Please try again later.\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCodeChange = async (e) => {\r\n    const enteredCode = e.target.value;\r\n    setCode(enteredCode);\r\n\r\n    // Validate code format (if needed)\r\n    if (!enteredCode.match(/^\\d{6}$/)) {\r\n      setIsCodeVerified(false);\r\n      setErrors({ ...errors, code: \"Please enter a valid 6-digit code.\" });\r\n      return;\r\n    }\r\n\r\n    // Check if the code is valid (dynamically, after every change)\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/verify-code.php\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({ email, code: enteredCode }),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      const rawText = await response.text();\r\n      let data;\r\n\r\n      try {\r\n        data = JSON.parse(rawText);\r\n      } catch (e) {\r\n        console.error(\"Invalid JSON received:\", rawText);\r\n        setErrors({\r\n          ...errors,\r\n          code: \"Unexpected response from the server. Please try again.\",\r\n        });\r\n        setIsCodeVerified(false);\r\n        return;\r\n      }\r\n\r\n      if (data.success) {\r\n        setCodeSuccessMessage(data.success); // Success for code verification step\r\n        setErrors({ ...errors, code: \"\" }); // Clear code error\r\n        setIsCodeVerified(true); // Set verified if the server returns success\r\n      } else if (data.error) {\r\n        setErrors({ ...errors, code: data.error });\r\n        setIsCodeVerified(false); // Set false if verification fails\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error verifying code:\", error);\r\n      setErrors({\r\n        ...errors,\r\n        code: \"There was an error verifying the code. Please try again later.\",\r\n      });\r\n      setIsCodeVerified(false);\r\n    }\r\n  };\r\n\r\n  // Verify code entered by user\r\n  const verifyCode = async () => {\r\n    let codeError = \"\";\r\n\r\n    if (!code.match(/^\\d{6}$/)) {\r\n      codeError = \"Please enter your 6-digit code.\";\r\n      setIsCodeVerified(false); // Set to false if code format is invalid\r\n    }\r\n\r\n    setErrors({ ...errors, code: codeError });\r\n\r\n    if (!codeError) {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8000/verify-code.php\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ email, code }), // Include both email and code\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n\r\n        const rawText = await response.text();\r\n        let data;\r\n\r\n        try {\r\n          data = JSON.parse(rawText);\r\n        } catch (e) {\r\n          console.error(\"Invalid JSON received:\", rawText);\r\n          setErrors({\r\n            ...errors,\r\n            code: \"Unexpected response from the server. Please try again.\",\r\n          });\r\n          setIsCodeVerified(false);\r\n          return;\r\n        }\r\n\r\n        if (data.success) {\r\n          setErrors({ ...errors, successMessage: data.success });\r\n          setStep(2); // Proceed to the password reset step\r\n          setIsCodeVerified(true); // Set to true if verification is successful\r\n        } else if (data.error) {\r\n          setErrors({ ...errors, code: data.error });\r\n          setIsCodeVerified(false); // Set to false if verification fails\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error verifying code:\", error);\r\n        setErrors({\r\n          ...errors,\r\n          code: \"There was an error verifying the code. Please try again later.\",\r\n        });\r\n        setIsCodeVerified(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const previousStep = () => setStep(1);\r\n\r\n  const handleUpdatePassword = async () => {\r\n    let passwordError = \"\";\r\n    let confirmPasswordError = \"\";\r\n\r\n    if (!password) {\r\n        passwordError = \"Please enter your password.\";\r\n    }\r\n\r\n    if (!confirmPassword || confirmPassword !== password) {\r\n        confirmPasswordError = \"Password and Confirm Password do not match.\";\r\n    }\r\n\r\n    setErrors({\r\n        password: passwordError,\r\n        confirmPassword: confirmPasswordError,\r\n    });\r\n\r\n    if (!passwordError && !confirmPasswordError) {\r\n        const response = await fetch(\"http://localhost:8000/change-password.php\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                email, // Pass the email to the backend\r\n                code,\r\n                newPassword: password,\r\n                confirmPassword,\r\n            }),\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        });\r\n\r\n        const data = await response.json();\r\n        if (data.error) {\r\n            setErrors({ ...errors, ...data });\r\n        } else {\r\n            console.log(\"Password updated successfully!\");\r\n        }\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className={styles.fpassContainer}>\r\n      <div className={styles.logo}>\r\n        <img src={require(\"../assets/main-logo.png\")} alt=\"Childhood\" />\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className={styles.progressBar}>\r\n        <div\r\n          className={\r\n            step >= 1 ? styles.activeProgress : styles.inactiveProgress\r\n          }\r\n        />\r\n        <div\r\n          className={\r\n            step === 2 ? styles.activeProgress : styles.inactiveProgress\r\n          }\r\n        />\r\n      </div>\r\n\r\n      {/* Step 1: Confirm Email */}\r\n      {step === 1 && (\r\n        <div className={styles.stepContent}>\r\n          <div className={styles.stepHeader}>\r\n            <Link to=\"/login\">\r\n              <FaChevronLeft className={styles.back} />\r\n            </Link>\r\n            <div className={styles.stepDetails}>\r\n              <div className={styles.stepTitle}>Step 1 of 2</div>\r\n              <div className={styles.stepDescription}>Confirm Email</div>\r\n            </div>\r\n          </div>\r\n          <form>\r\n            <label>Email</label>\r\n            <div\r\n              className={`${styles.inputContainer} ${\r\n                errors.email ? styles.errorInputContainer : \"\"\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"name@domain.com\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                className={`${styles.input} ${\r\n                  errors.email ? styles.errorInput : \"\"\r\n                }`}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={sendCode}\r\n                className={styles.inputIconButton}\r\n              >\r\n                <IoArrowForwardCircle className={styles.inputIcon} />\r\n              </button>\r\n            </div>\r\n            {errors.email && (\r\n              <p className={styles.errorMessage}>\r\n                <AiOutlineExclamationCircle className={styles.errorIcon} />{\" \"}\r\n                {errors.email}\r\n              </p>\r\n            )}\r\n\r\n            {emailSuccessMessage && (\r\n              <p className={styles.successMessage}>\r\n                <AiOutlineExclamationCircle className={styles.successIcon} />{\" \"}\r\n                {emailSuccessMessage}\r\n              </p>\r\n            )}\r\n\r\n            <label>Code</label>\r\n            <div\r\n              className={`${styles.inputContainer} ${\r\n                isCodeVerified === false ? styles.errorInputContainer : \"\" // Red border if not verified\r\n              } ${isCodeVerified === true ? styles.successInputContainer : \"\"}`} // Green border if verified\r\n            >\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"XXXXXX\"\r\n                value={code}\r\n                onChange={handleCodeChange} // Trigger verification on each change\r\n                className={`${styles.input} ${\r\n                  isCodeVerified === false ? styles.errorInput : \"\"\r\n                } ${isCodeVerified === true ? styles.successInput : \"\"}`}\r\n                disabled={!isCodeEnabled} // Disable until the code is sent\r\n              />\r\n            </div>\r\n\r\n            {errors.code && (\r\n              <p className={styles.errorMessage}>\r\n                <AiOutlineExclamationCircle className={styles.errorIcon} />{\" \"}\r\n                {errors.code}\r\n              </p>\r\n            )}\r\n\r\n            {/* Display success message under the code field */}\r\n            {codeSuccessMessage && (\r\n              <p className={styles.successMessage}>\r\n                <AiOutlineExclamationCircle className={styles.successIcon} />{\" \"}\r\n                {codeSuccessMessage}\r\n              </p>\r\n            )}\r\n          </form>\r\n          <button onClick={verifyCode} className={styles.nextBtn}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Step 2: Change Password */}\r\n      {step === 2 && (\r\n        <div className={styles.stepContent}>\r\n          <div className={styles.stepHeader}>\r\n            <button onClick={previousStep}>\r\n              <FaChevronLeft className={styles.back} />\r\n            </button>\r\n            <div className={styles.stepDetails}>\r\n              <div className={styles.stepTitle}>Step 2 of 2</div>\r\n              <div className={styles.stepDescription}>Changing Password</div>\r\n            </div>\r\n          </div>\r\n          <form>\r\n            {/* Password Input */}\r\n            <label>Password</label>\r\n            <div\r\n              className={`${styles.inputContainer} ${\r\n                errors.password || errors.confirmPassword\r\n                  ? styles.errorInputContainer\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                className={`${styles.input} ${\r\n                  errors.password || errors.confirmPassword\r\n                    ? styles.errorInput\r\n                    : \"\"\r\n                }`}\r\n              />\r\n            </div>\r\n            {/* Error Message for Password */}\r\n            {errors.password && (\r\n              <p className={styles.errorMessage}>\r\n                <AiOutlineExclamationCircle className={styles.errorIcon} />{\" \"}\r\n                {errors.password}\r\n              </p>\r\n            )}\r\n\r\n            {/* Confirm Password Input */}\r\n            <label>Confirm Password</label>\r\n            <div\r\n              className={`${styles.inputContainer} ${\r\n                errors.confirmPassword || errors.password\r\n                  ? styles.errorInputContainer\r\n                  : \"\"\r\n              }`}\r\n            >\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Re-type password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                className={`${styles.input} ${\r\n                  errors.confirmPassword || errors.password\r\n                    ? styles.errorInput\r\n                    : \"\"\r\n                }`}\r\n              />\r\n            </div>\r\n            {/* Error Message for Confirm Password */}\r\n            {errors.confirmPassword && (\r\n              <p className={styles.errorMessage}>\r\n                <AiOutlineExclamationCircle className={styles.errorIcon} />{\" \"}\r\n                {errors.confirmPassword}\r\n              </p>\r\n            )}\r\n          </form>\r\n          <button onClick={handleUpdatePassword} className={styles.upPassBtn}>\r\n            Update Password\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPass;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}