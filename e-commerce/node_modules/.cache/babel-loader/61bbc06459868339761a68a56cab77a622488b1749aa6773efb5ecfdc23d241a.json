{"ast":null,"code":"var _jsxFileName = \"D:\\\\childhoodweb\\\\e-commerce\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { AiOutlineExclamationCircle } from 'react-icons/ai';\nimport styles from '../styles/login.module.css';\nimport '../styles/global.css';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({\n    email: '',\n    password: ''\n  });\n  const navigate = useNavigate(); // Use useNavigate for navigation\n\n  // Dynamically load Google API script\n  useEffect(() => {\n    const loadGoogleScript = () => {\n      const script = document.createElement(\"script\");\n      script.src = \"https://accounts.google.com/gsi/client\"; // Correct Google Sign-In API URL\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n      script.onload = () => {\n        // Check if google is available after script load\n        if (window.google && window.google.accounts) {\n          // Initialize Google Sign-In\n          window.google.accounts.id.initialize({\n            client_id: \"721590458157-itmi52dge12bt55v4k063g7im2kra6sr.apps.googleusercontent.com\",\n            // Your Client ID\n            callback: response => {\n              if (response.credential) {\n                try {\n                  // Decode the JWT token to extract user info\n                  const googleUser = jwtDecode(response.credential);\n                  console.log(\"Google User Info:\", googleUser);\n\n                  // Store user details in sessionStorage\n                  sessionStorage.setItem(\"email\", googleUser.email);\n                  sessionStorage.setItem(\"user\", JSON.stringify({\n                    name: googleUser.name,\n                    email: googleUser.email\n                  }));\n\n                  // Redirect to home page\n                  navigate(\"/home\");\n                } catch (error) {\n                  console.error(\"Error decoding JWT:\", error);\n                }\n              } else {\n                console.error(\"Google login failed. No credential received.\");\n              }\n            }\n          });\n\n          // Render Google Sign-In button (or use prompt)\n          window.google.accounts.id.renderButton(document.getElementById(\"googleSignInButton\"), {\n            theme: \"outline\",\n            size: \"large\"\n          });\n\n          // Optionally, you can also use `google.accounts.id.prompt()` for direct prompt:\n          // window.google.accounts.id.prompt();\n        } else {\n          console.error(\"Google API not loaded properly.\");\n        }\n      };\n      script.onerror = error => {\n        console.error(\"Error loading Google API script:\", error);\n      };\n    };\n    loadGoogleScript();\n  }, [navigate]);\n  const handleGoogleSignIn = () => {\n    // Ensure the Google object is loaded before calling the prompt\n    if (window.google && window.google.accounts) {\n      window.google.accounts.id.prompt();\n    } else {\n      console.error('Google Sign-In is not initialized.');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    let emailError = '';\n    let passwordError = '';\n    if (!email) emailError = 'Please enter your Childhood email or username.';\n    if (!password) passwordError = 'Please enter your password.';\n    setErrors({\n      email: emailError,\n      password: passwordError\n    });\n    if (!emailError && !passwordError) {\n      // Perform login logic here\n      loginUser(email, password);\n    }\n  };\n  const loginUser = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:8000/login.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: new URLSearchParams({\n          email: email,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        // Save the user details and email in sessionStorage\n        sessionStorage.setItem('email', data.email);\n        sessionStorage.setItem('user', JSON.stringify(data.user));\n        // Redirect to a protected route\n        navigate('/home');\n      } else {\n        // Show error message if login fails\n        setErrors({\n          ...errors,\n          password: data.error\n        });\n      }\n    } catch (error) {\n      console.error('Login failed', error);\n      setErrors({\n        ...errors,\n        email: 'An error occurred. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logo,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: require('../assets/main-logo.png'),\n        alt: \"Childhood Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Log in to Childhood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.authButtons,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.googleButton,\n        onClick: handleGoogleSignIn,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('../assets/icons/Google.png'),\n          alt: \"Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), \" Continue with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/bookPass\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.bookPassButton,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../assets/icons/Password Book.png'),\n            alt: \"Book Pass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), \" Continue with Book Pass\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Email or username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Email or username\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: `${styles.input} ${errors.email ? styles.errorInput : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.errorIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), \" \", errors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: `${styles.input} ${errors.password ? styles.errorInput : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.errorMessage,\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineExclamationCircle, {\n            className: styles.errorIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), \" \", errors.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.loginButton,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.extraOptions,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/forgotPass\",\n        className: styles.forgotPassword,\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don\\u2019t have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signUp\",\n          className: styles.signUp,\n          children: \"Sign up for Childhood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HamLTAnettoRDI3BlF67UY1Z6D4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","AiOutlineExclamationCircle","styles","jwtDecode","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","errors","setErrors","navigate","loadGoogleScript","script","document","createElement","src","async","defer","body","appendChild","onload","window","google","accounts","id","initialize","client_id","callback","response","credential","googleUser","console","log","sessionStorage","setItem","JSON","stringify","name","error","renderButton","getElementById","theme","size","onerror","handleGoogleSignIn","prompt","handleSubmit","e","preventDefault","emailError","passwordError","loginUser","fetch","method","headers","URLSearchParams","data","json","success","user","className","container","children","logo","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","authButtons","googleButton","onClick","to","bookPassButton","divider","form","onSubmit","inputGroup","type","placeholder","value","onChange","target","input","errorInput","errorMessage","errorIcon","loginButton","extraOptions","forgotPassword","signUp","_c","$RefreshReg$"],"sources":["D:/childhoodweb/e-commerce/src/pages/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { AiOutlineExclamationCircle } from 'react-icons/ai'; \r\nimport styles from '../styles/login.module.css';\r\nimport '../styles/global.css';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errors, setErrors] = useState({ email: '', password: '' });\r\n  const navigate = useNavigate(); // Use useNavigate for navigation\r\n\r\n  // Dynamically load Google API script\r\n  useEffect(() => {\r\n    const loadGoogleScript = () => {\r\n      const script = document.createElement(\"script\");\r\n      script.src = \"https://accounts.google.com/gsi/client\"; // Correct Google Sign-In API URL\r\n      script.async = true;\r\n      script.defer = true;\r\n      document.body.appendChild(script);\r\n  \r\n      script.onload = () => {\r\n        // Check if google is available after script load\r\n        if (window.google && window.google.accounts) {\r\n          // Initialize Google Sign-In\r\n          window.google.accounts.id.initialize({\r\n            client_id: \"721590458157-itmi52dge12bt55v4k063g7im2kra6sr.apps.googleusercontent.com\", // Your Client ID\r\n            callback: (response) => {\r\n              if (response.credential) {\r\n                try {\r\n                  // Decode the JWT token to extract user info\r\n                  const googleUser = jwtDecode(response.credential);\r\n                  console.log(\"Google User Info:\", googleUser);\r\n  \r\n                  // Store user details in sessionStorage\r\n                  sessionStorage.setItem(\"email\", googleUser.email);\r\n                  sessionStorage.setItem(\"user\", JSON.stringify({ name: googleUser.name, email: googleUser.email }));\r\n  \r\n                  // Redirect to home page\r\n                  navigate(\"/home\");\r\n                } catch (error) {\r\n                  console.error(\"Error decoding JWT:\", error);\r\n                }\r\n              } else {\r\n                console.error(\"Google login failed. No credential received.\");\r\n              }\r\n            },\r\n          });\r\n  \r\n          // Render Google Sign-In button (or use prompt)\r\n          window.google.accounts.id.renderButton(\r\n            document.getElementById(\"googleSignInButton\"),\r\n            { theme: \"outline\", size: \"large\" }\r\n          );\r\n  \r\n          // Optionally, you can also use `google.accounts.id.prompt()` for direct prompt:\r\n          // window.google.accounts.id.prompt();\r\n        } else {\r\n          console.error(\"Google API not loaded properly.\");\r\n        }\r\n      };\r\n  \r\n      script.onerror = (error) => {\r\n        console.error(\"Error loading Google API script:\", error);\r\n      };\r\n    };\r\n  \r\n    loadGoogleScript();\r\n  }, [navigate]);\r\n  \r\n\r\n  const handleGoogleSignIn = () => {\r\n    // Ensure the Google object is loaded before calling the prompt\r\n    if (window.google && window.google.accounts) {\r\n      window.google.accounts.id.prompt();\r\n    } else {\r\n      console.error('Google Sign-In is not initialized.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let emailError = '';\r\n    let passwordError = '';\r\n\r\n    if (!email) emailError = 'Please enter your Childhood email or username.';\r\n    if (!password) passwordError = 'Please enter your password.';\r\n\r\n    setErrors({ email: emailError, password: passwordError });\r\n\r\n    if (!emailError && !passwordError) {\r\n      // Perform login logic here\r\n      loginUser(email, password);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (email, password) => {\r\n    try {\r\n      const response = await fetch('http://localhost:8000/login.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        // Save the user details and email in sessionStorage\r\n        sessionStorage.setItem('email', data.email);\r\n        sessionStorage.setItem('user', JSON.stringify(data.user));\r\n        // Redirect to a protected route\r\n        navigate('/home');\r\n      } else {\r\n        // Show error message if login fails\r\n        setErrors({ ...errors, password: data.error });\r\n      }\r\n    } catch (error) {\r\n      console.error('Login failed', error);\r\n      setErrors({ ...errors, email: 'An error occurred. Please try again.' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.logo}>\r\n        <img src={require('../assets/main-logo.png')} alt=\"Childhood Logo\" />\r\n      </div>\r\n      <h1 className={styles.title}>Log in to Childhood</h1>\r\n\r\n      <div className={styles.authButtons}>\r\n        <button className={styles.googleButton} onClick={handleGoogleSignIn}>\r\n          <img src={require('../assets/icons/Google.png')} alt=\"Google\" /> Continue with Google\r\n        </button>\r\n        <Link to=\"/bookPass\">\r\n          <button className={styles.bookPassButton}>\r\n            <img src={require('../assets/icons/Password Book.png')} alt=\"Book Pass\" /> Continue with Book Pass\r\n          </button>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className={styles.divider}></div>\r\n\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <div className={styles.inputGroup}>\r\n          <h5>Email or username</h5>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            placeholder=\"Email or username\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            className={`${styles.input} ${errors.email ? styles.errorInput : ''}`}\r\n          />\r\n          {errors.email && (\r\n            <p className={styles.errorMessage}>\r\n              <AiOutlineExclamationCircle className={styles.errorIcon} /> {errors.email}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.inputGroup}>\r\n          <h5>Password</h5>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className={`${styles.input} ${errors.password ? styles.errorInput : ''}`}\r\n          />\r\n          {errors.password && (\r\n            <p className={styles.errorMessage}>\r\n              <AiOutlineExclamationCircle className={styles.errorIcon} /> {errors.password}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\" className={styles.loginButton}>Log in</button>\r\n      </form>\r\n\r\n      <div className={styles.extraOptions}>\r\n        <Link to=\"/forgotPass\" className={styles.forgotPassword}>Forgot your password?</Link>\r\n        <p>\r\n          Don’t have an account?{' '}\r\n          <Link to=\"/signUp\" className={styles.signUp}>Sign up for Childhood</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}